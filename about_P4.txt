P4 
What is Data Plane Programming with P4?
Network systems are currently built on the bottom up approach, which is 
the fixed function ASIC,and their datasheet roughly tell us " this is HOW I KNOW to process packets" and that defines bottoms up how your system will be built.
If you want to add new features, or support additional protocols you would have to change the fixed function chip which would take multiple years. 
Data plane programming with P4 is trying to turn the philosophy upside down.
What we really want is to be able to define at a high level exactly how the chip should process packets "This is HOW I WANT packets to be processed", 
which is done by writing a P4 program
That P4 program is then compiled down to the chip
This way network system designers get to define exactly what features they want to have in their system, 
without having to rely on third party chip vendors to make the decisions for them.

Working of P4
P4 is based on PISA(Program Independant Switch Architecture) which includes:
>> Programmable Parser - user defines the header and its order in the packet
>> Programmable Match Action Pipeline - Defines the tables and the exact processing algorithm.
What they can do is to match some data against a table that contains some entries and execute a corresponding action.
>> Deparser - The final headers are emitted to form the packet.

Software tools used for the execution of P4 on the VM:
BMV2- Software Switch
p4c- reference P4 compiler
Mininet- Lightweight Network Emulation environment
Scapy- sending and receiving packets.


